<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="sidev.lib.reflex.SampleTests" tests="1" skipped="0" failures="0" errors="0" timestamp="2020-08-29T21:33:53" hostname="DESKTOP-4R4F81" time="0.124">
  <properties/>
  <testcase name="nativeCloneTest" classname="sidev.lib.reflex.SampleTests" time="0.124"/>
  <system-out><![CDATA[?[0m 
============= Clone =============
 ?[0m
?[0m ac.acStr3= aaa2 ac2.acStr3= aaa2 ?[0m
?[0m ac.acStr1= aaa1 ac2.acStr1= aaa1 ?[0m
?[0m ac.acStr2= aaa2 ac2.acStr2= aaa2 ?[0m
?[0m ac.poin.x= 1 ac2.poin.x= 1 ?[0m
?[0m ac.ab_abs= 10 ac2.ab_abs= 10 ?[0m
?[0m ac.dDariAA.d= 1 ac2.dDariAA.d= 1  ?[0m
?[0m ac.acStr3= aaa2 ac2.acStr3= bbb2 ?[0m
?[0m ac.acStr1= bbb1 ac2.acStr1= aaa1 ?[0m
?[0m ac.acStr2= aaa2 ac2.acStr2= bbb2 ?[0m
?[0m ac.poin.x= 12 ac2.poin.x= 1 ?[0m
?[0m ac.ab_abs= 10 ac2.ab_abs= 10 ?[0m
?[0m ac.dDariAA.d= 19 ac2.dDariAA.d= 1  ?[0m
?[0m 
============= ac.implementedPropertyValuesTree =============
 ?[0m
?[0m 

 ==== Halo dari AC.someFun() x= [object Object] ==== 

 ?[0m
?[0m 

 ==== Halo dari AC.someOtherFun() x= [object Object] az= 1 ==== 

 ?[0m
?[0m 

 ==== Halo dari AC.someFun() x= [object Object] ==== 

 ?[0m
?[0m 

 ==== Halo dari AC.someFun() x= [object Object] ==== 

 ?[0m
?[0m 

 ==== Halo dari AC.someOtherFun() x= [object Object] az= 1 ==== 

 ?[0m
?[0m 

 ==== Halo dari AC.someOtherFun() x= [object Object] az= 1 ==== 

 ?[0m
i= 0 prop= (var AC.poinConstr, [object Object])
i= 1 prop= (var AC.ac, ppop)
i= 2 prop= (var AC.acPriv, aaa)
i= 3 prop= (var AC.acStr1, bbb1)
i= 4 prop= (var AC.acStr2, aaa2)
i= 5 prop= (var AC.a, true)
i= 6 prop= (var AC.poin, [object Object])
i= 7 prop= (var AC.array, 1,2,3)
i= 8 prop= (var AC.poinLate, undefined)
i= 9 prop= (var AC.ab_abs_pw9mk$, 10)
i= 10 prop= (var AC.aLazy, nilai lazy)
i= 11 prop= (var AB.ab, ok)
i= 12 prop= (var AB.ab_2, ok)
i= 13 prop= (var AB.ab_3, 6)
i= 14 prop= (var AA.aa, )
i= 15 prop= (var AA.dDariAA, [object Object])
i= 16 prop= (var AA_.aa_, 123)
i= 17 prop= (var AA__.aa__, 1)
?[0m list2::class= class ArrayList ?[0m
?[0m list2::class.isCopySafe= false ?[0m
?[0m "afsa"::class.isCopySafe= true ?[0m
?[0m list2::class.isCollection= true ?[0m
?[0m 
============= list2::class.classesTree ===============
 ?[0m
?[0m i= 0 cls= LeveledValue(level=0, value=class ArrayList) ?[0m
?[0m i= 1 cls= LeveledValue(level=1, value=class RandomAccess) ?[0m
?[0m i= 2 cls= LeveledValue(level=1, value=class AbstractMutableList) ?[0m
?[0m i= 3 cls= LeveledValue(level=2, value=class MutableList) ?[0m
?[0m i= 4 cls= LeveledValue(level=3, value=class MutableCollection) ?[0m
?[0m i= 5 cls= LeveledValue(level=4, value=class MutableIterable) ?[0m
?[0m i= 6 cls= LeveledValue(level=5, value=class Iterable) ?[0m
?[0m i= 7 cls= LeveledValue(level=4, value=class Collection) ?[0m
?[0m i= 8 cls= LeveledValue(level=5, value=class Iterable) ?[0m
?[0m i= 9 cls= LeveledValue(level=3, value=class List) ?[0m
?[0m i= 10 cls= LeveledValue(level=4, value=class Collection) ?[0m
?[0m i= 11 cls= LeveledValue(level=5, value=class Iterable) ?[0m
?[0m i= 12 cls= LeveledValue(level=2, value=class AbstractMutableCollection) ?[0m
?[0m i= 13 cls= LeveledValue(level=3, value=class MutableCollection) ?[0m
?[0m i= 14 cls= LeveledValue(level=4, value=class MutableIterable) ?[0m
?[0m i= 15 cls= LeveledValue(level=5, value=class Iterable) ?[0m
?[0m i= 16 cls= LeveledValue(level=4, value=class Collection) ?[0m
?[0m i= 17 cls= LeveledValue(level=5, value=class Iterable) ?[0m
?[0m i= 18 cls= LeveledValue(level=3, value=class AbstractCollection) ?[0m
?[0m i= 19 cls= LeveledValue(level=4, value=class Collection) ?[0m
?[0m i= 20 cls= LeveledValue(level=5, value=class Iterable) ?[0m
?[0m i= 21 cls= LeveledValue(level=1, value=class MutableList) ?[0m
?[0m i= 22 cls= LeveledValue(level=2, value=class MutableCollection) ?[0m
?[0m i= 23 cls= LeveledValue(level=3, value=class MutableIterable) ?[0m
?[0m i= 24 cls= LeveledValue(level=4, value=class Iterable) ?[0m
?[0m i= 25 cls= LeveledValue(level=3, value=class Collection) ?[0m
?[0m i= 26 cls= LeveledValue(level=4, value=class Iterable) ?[0m
?[0m i= 27 cls= LeveledValue(level=2, value=class List) ?[0m
?[0m i= 28 cls= LeveledValue(level=3, value=class Collection) ?[0m
?[0m i= 29 cls= LeveledValue(level=4, value=class Iterable) ?[0m
?[0m 
============= List Clone ===============
 ?[0m
?[0m list1[0].poin.x= 16 list1[1].poin.x= 1 ?[0m
?[0m list1[0].poin.y= 2 list1[1].poin.y= 32 ?[0m
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
